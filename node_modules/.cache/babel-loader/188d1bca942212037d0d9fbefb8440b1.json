{"ast":null,"code":"var _jsxFileName = \"/Users/peng/Documents/Coding Stuff/Product/SchmoozApp/SchmoozWebsite/schmoozsite/src/components/SchmoozSubscribeForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SchmoozSubscribeForm(_ref) {\n  _s();\n\n  let {\n    status,\n    message,\n    onValidated\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [schmoozOrUse, setSchmoozOrUser] = useState(undefined);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: val => setEmail(val.target.value),\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SchmoozSubscribeForm, \"htDgTRVyKj/TjzrC6vgLM6I/IIE=\");\n\n_c = SchmoozSubscribeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SchmoozSubscribeForm\");","map":{"version":3,"sources":["/Users/peng/Documents/Coding Stuff/Product/SchmoozApp/SchmoozWebsite/schmoozsite/src/components/SchmoozSubscribeForm.tsx"],"names":["React","useState","SchmoozSubscribeForm","status","message","onValidated","email","setEmail","schmoozOrUse","setSchmoozOrUser","undefined","val","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,SAASC,oBAAT,OAQJ;AAAA;;AAAA,MARkC;AACnCC,IAAAA,MADmC;AAEnCC,IAAAA,OAFmC;AAGnCC,IAAAA;AAHmC,GAQlC;AACD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACO,YAAD,EAAeC,gBAAf,IAAmCR,QAAQ,CAC/CS,SAD+C,CAAjD;AAIA,sBACE;AAAA,2BACE;AAAO,MAAA,KAAK,EAAEJ,KAAd;AAAqB,MAAA,QAAQ,EAAGK,GAAD,IAASJ,QAAQ,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBeX,oB;;KAAAA,oB","sourcesContent":["import React, { useState } from \"react\";\n\nexport function SchmoozSubscribeForm({\n  status,\n  message,\n  onValidated,\n}: {\n  status: \"error\" | \"success\" | \"sending\" | null;\n  message: string | Error | null;\n  onValidated: (val: any) => void;\n}) {\n  const [email, setEmail] = useState<string>(\"\");\n  const [schmoozOrUse, setSchmoozOrUser] = useState<Boolean | undefined>(\n    undefined\n  );\n\n  return (\n    <form>\n      <input value={email} onChange={(val) => setEmail(val.target.value)}>\n        test\n      </input>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}